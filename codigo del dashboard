<!DOCTYPE html>
<html lang="es">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Dashboard Interactivo</title>
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <style>
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }

        body {
            font-family: Arial, sans-serif;
            display: flex;
            height: 100vh;
            flex-direction: column;
            background-color: #f4f4f4;
            color: #333;
            transition: background-color 0.3s, color 0.3s;
        }

        .sidebar {
            width: 250px;
            background-color: #333;
            color: white;
            padding: 20px;
            display: flex;
            flex-direction: column;
        }

        .sidebar h2 {
            text-align: center;
            margin-bottom: 30px;
        }

        .sidebar ul {
            list-style: none;
            padding: 0;
        }

        .sidebar ul li {
            margin: 15px 0;
        }

        .sidebar ul li a {
            color: white;
            text-decoration: none;
        }

        .content {
            flex: 1;
            padding: 20px;
            background-color: #f4f4f4;
            display: flex;
            flex-direction: column;
        }

        header {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 20px;
        }

        button {
            background-color: #333;
            color: white;
            border: none;
            padding: 10px 20px;
            cursor: pointer;
        }

        button:hover {
            background-color: #444;
        }

        .notifications {
            font-size: 14px;
        }

        .section {
            margin-bottom: 40px;
        }

        .section h3 {
            margin-bottom: 10px;
        }

        .input-container {
            display: grid;
            grid-template-columns: repeat(auto-fill, minmax(150px, 1fr));
            gap: 10px;
            margin-bottom: 10px;
        }

        input {
            padding: 10px;
            font-size: 16px;
            width: 100%;
            box-sizing: border-box;
        }

        .cards {
            display: flex;
            justify-content: space-around;
            margin-bottom: 40px;
        }

        .card {
            background-color: white;
            border: 1px solid #ddd;
            border-radius: 8px;
            padding: 20px;
            width: 30%;
            text-align: center;
        }

        .chart-container {
            margin-bottom: 20px;
            display: flex;
            justify-content: center;
            max-width: 600px;
            margin: 0 auto;
        }

        body.dark-mode {
            background-color: #222;
            color: white;
        }

        body.dark-mode .sidebar {
            background-color: #444;
        }

        body.dark-mode .card {
            background-color: #333;
            color: white;
        }

        body.dark-mode .notifications {
            color: white;
        }

        /* Mejora del modo oscuro */
        body.dark-mode {
            background-color: #121212;
            color: white;
        }

        body.dark-mode .sidebar {
            background-color: #333;
        }

        body.dark-mode .content {
            background-color: #1d1d1d;
        }

        body.dark-mode .section h3 {
            color: white;
        }

        body.dark-mode input {
            background-color: #555;
            color: white;
            border: 1px solid #777;
        }

        body.dark-mode input::placeholder {
            color: #bbb;
        }

        body.dark-mode .card {
            background-color: #333;
            color: white;
        }

        body.dark-mode button {
            background-color: #444;
        }

        body.dark-mode button:hover {
            background-color: #555;
        }

        .summary {
            background-color: #444;
            padding: 10px;
            margin-top: 10px;
            border-radius: 8px;
            color: white;
        }

        .summary p {
            margin: 5px 0;
        }

    </style>
</head>
<body>

    <!-- Men칰 de navegaci칩n -->
    <div class="sidebar">
        <h2>Dashboard</h2>
        <ul>
            <li><a href="#">Inicio</a></li>
            <li><a href="#">Estad칤sticas</a></li>
            <li><a href="#">Configuraci칩n</a></li>
        </ul>
    </div>

    <!-- Contenido del Dashboard -->
    <div class="content">
        <header>
            <button id="toggle-dark-mode">游깿 Modo Oscuro</button>
            <div class="notifications">
                <span>Notificaciones: </span><span id="notification-count">0</span>
            </div>
        </header>

        <!-- Secci칩n H치bitos del D칤a -->
        <div class="section">
            <h3>H치bitos del D칤a</h3>
            <div class="input-container">
                <input type="number" id="habitWakeUp" placeholder="Levantarse Temprano (%)">
                <input type="number" id="habitCleaning" placeholder="Limpieza (%)">
                <input type="number" id="habitBreakfast" placeholder="Desayunar (%)">
                <input type="number" id="habitLunch" placeholder="Almorzar (%)">
                <input type="number" id="habitDinner" placeholder="Cenar (%)">
                <input type="number" id="habitExercise" placeholder="Ejercicio (%)">
                <input type="number" id="habitStudy" placeholder="Estudiar (%)">
                <input type="number" id="habitWork" placeholder="Trabajar (%)">
                <input type="number" id="habitSleep" placeholder="Dormir Temprano (%)">
            </div>
            <button onclick="updateHabitProgress()">Actualizar H치bitos</button>
            <p id="habitStatus">Progreso de h치bitos: </p>
            
            <!-- Gr치fico de H치bitos -->
            <div class="chart-container">
                <canvas id="habitChart"></canvas>
            </div>
        </div>

        <!-- Secci칩n Metas Mensuales -->
        <div class="section">
            <h3>Metas Mensuales</h3>
            <!-- Resumen estad칤stico -->
            <div class="summary" id="monthlySummary">
                <p><strong>Promedio mensual:</strong> 0%</p>
                <p><strong>Descripci칩n:</strong> Basado en el promedio de h치bitos diarios.</p>
            </div>
            <!-- Gr치fico de Metas Mensuales -->
            <div class="chart-container">
                <canvas id="monthlyGoalsChart"></canvas>
            </div>
        </div>

        <!-- Secci칩n Progreso Semanal -->
        <div class="section">
            <h3>Progreso Semanal</h3>
            <!-- Resumen estad칤stico -->
            <div class="summary" id="weeklySummary">
                <p><strong>Promedio semanal:</strong> 0%</p>
                <p><strong>Descripci칩n:</strong> Basado en el promedio de h치bitos diarios.</p>
            </div>
            <!-- Gr치fico de Progreso Semanal -->
            <div class="chart-container">
                <canvas id="weeklyProgressChart"></canvas>
            </div>
        </div>

    </div>

    <script>
        // Gr치fico de Chart.js para H치bitos del D칤a
        const ctx = document.getElementById('habitChart').getContext('2d');
        const habitChart = new Chart(ctx, {
            type: 'bar',
            data: {
                labels: ['Levantarse Temprano', 'Limpieza', 'Desayunar', 'Almorzar', 'Cenar', 'Ejercicio', 'Estudiar', 'Trabajar', 'Dormir Temprano'],
                datasets: [{
                    label: 'Progreso de H치bitos',
                    data: [0, 0, 0, 0, 0, 0, 0, 0, 0],
                    backgroundColor: 'rgba(75, 192, 192, 0.5)',
                    borderColor: 'rgba(75, 192, 192, 1)',
                    borderWidth: 1
                }]
            },
            options: {
                responsive: true,
                scales: {
                    y: {
                        beginAtZero: true
                    }
                }
            }
        });

        // Gr치fico de Metas Mensuales
        const monthlyGoalsCtx = document.getElementById('monthlyGoalsChart').getContext('2d');
        const monthlyGoalsChart = new Chart(monthlyGoalsCtx, {
            type: 'line',
            data: {
                labels: ['Enero', 'Febrero', 'Marzo', 'Abril', 'Mayo', 'Junio', 'Julio', 'Agosto', 'Septiembre', 'Octubre', 'Noviembre', 'Diciembre'],
                datasets: [{
                    label: 'Metas Mensuales',
                    data: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
                    backgroundColor: 'rgba(54, 162, 235, 0.2)',
                    borderColor: 'rgba(54, 162, 235, 1)',
                    borderWidth: 1
                }]
            },
            options: {
                responsive: true,
                scales: {
                    y: {
                        beginAtZero: true
                    }
                }
            }
        });

        // Gr치fico Radar Progreso Semanal
        const weeklyProgressCtx = document.getElementById('weeklyProgressChart').getContext('2d');
        const weeklyProgressChart = new Chart(weeklyProgressCtx, {
            type: 'radar',
            data: {
                labels: ['Lunes', 'Martes', 'Mi칠rcoles', 'Jueves', 'Viernes', 'S치bado', 'Domingo'],
                datasets: [{
                    label: 'Progreso Semanal',
                    data: [0, 0, 0, 0, 0, 0, 0],
                    backgroundColor: 'rgba(255, 159, 64, 0.5)',
                    borderColor: 'rgba(255, 159, 64, 1)',
                    borderWidth: 1
                }]
            },
            options: {
                responsive: true,
                scales: {
                    r: {
                        min: 0,
                        max: 100,
                        ticks: {
                            stepSize: 10
                        }
                    }
                }
            }
        });

        // Funci칩n para alternar el modo oscuro
        document.getElementById('toggle-dark-mode').addEventListener('click', function() {
            document.body.classList.toggle('dark-mode');
        });

        // Funci칩n para actualizar los h치bitos del d칤a
        function updateHabitProgress() {
            const habitProgress = [
                document.getElementById('habitWakeUp').value,
                document.getElementById('habitCleaning').value,
                document.getElementById('habitBreakfast').value,
                document.getElementById('habitLunch').value,
                document.getElementById('habitDinner').value,
                document.getElementById('habitExercise').value,
                document.getElementById('habitStudy').value,
                document.getElementById('habitWork').value,
                document.getElementById('habitSleep').value
            ];

            // Calcular el promedio de los h치bitos
            const averageHabitProgress = habitProgress.reduce((acc, val) => acc + parseFloat(val), 0) / habitProgress.length;

            document.getElementById('habitStatus').innerText = `Progreso de h치bitos: ${averageHabitProgress.toFixed(2)}%`;

            // Actualizar el gr치fico de h치bitos
            habitChart.data.datasets[0].data = habitProgress;
            habitChart.update();

            // Actualizar las gr치ficas de metas mensuales y progreso semanal con el promedio calculado
            updateMonthlyGoals(averageHabitProgress);
            updateWeeklyProgress(averageHabitProgress);
        }

        // Funci칩n para actualizar las metas mensuales con el promedio de h치bitos
        function updateMonthlyGoals(averageHabitProgress) {
            const monthlyGoals = Array(12).fill(averageHabitProgress);

            monthlyGoalsChart.data.datasets[0].data = monthlyGoals;
            monthlyGoalsChart.update();

            // Actualizar el resumen mensual
            document.getElementById('monthlySummary').innerHTML = `
                <p><strong>Promedio mensual:</strong> ${averageHabitProgress.toFixed(2)}%</p>
                <p><strong>Descripci칩n:</strong> Basado en el promedio de h치bitos diarios.</p>
            `;
        }

        // Funci칩n para actualizar el progreso semanal con el promedio de h치bitos
        function updateWeeklyProgress(averageHabitProgress) {
            const weeklyProgress = Array(7).fill(averageHabitProgress);

            weeklyProgressChart.data.datasets[0].data = weeklyProgress;
            weeklyProgressChart.update();

            // Actualizar el resumen semanal
            document.getElementById('weeklySummary').innerHTML = `
                <p><strong>Promedio semanal:</strong> ${averageHabitProgress.toFixed(2)}%</p>
                <p><strong>Descripci칩n:</strong> Basado en el promedio de h치bitos diarios.</p>
            `;
        }
    </script>
</body>
</html>
